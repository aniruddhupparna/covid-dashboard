{"version":3,"sources":["components/header/header.component.jsx","components/bar-graph/bar-graph.component.jsx","components/line-graph/line-graph.component.jsx","pages/dashboard/dashboard-page.component.jsx","components/sidenav/sidenav.component.jsx","pages/country-wise-stats/country-wise-stats-page.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","marginLeft","width","background","Header","classes","AppBar","position","className","Toolbar","Typography","variant","noWrap","BarGraph","data","title","dataKey","barInfo","pageWidth","window","innerWidth","Paper","elevation","BarChart","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","tickFormatter","tick","toLocaleString","Tooltip","formatter","value","Intl","NumberFormat","format","Legend","iconType","map","item","Bar","name","fill","LineGraph","stroke","LineChart","angle","toString","slice","tickMargin","verticalAlign","Line","type","todayBarGraphInfo","totalBarGraphInfo","Dashboard","fetchSummary","fetch","then","res","json","setState","summary","fetchGraphData","url","newConfirmedGraphData","totalConfirmedGraphData","state","this","style","color","fontWeight","cases","todayCases","recovered","todayRecovered","deaths","todayDeaths","marginTop","React","Component","drawer","flexShrink","drawerPaper","backgroundColor","sidenavItems","SideNav","Drawer","open","paper","List","navItem","to","link","ListItem","button","ListItemIcon","icon","ListItemText","primary","CountrywiseStats","setCountries","countries","country","flag","countyInfo","selectedCountry","populateGraph","graphData","handleChange","e","newVal","Autocomplete","id","options","getOptionLabel","option","marginBottom","onChange","defaultValue","renderInput","params","TextField","label","AreaChart","Area","App","exact","path","component","DashBoard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ecd9d3f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './header.styles.css';\r\nimport {AppBar, Toolbar, Typography} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {marginLeft: 240, width: `calc(100% - 240px)`, background: '#166fe5'}\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return (<AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        COVID STATS\r\n                    </Typography>\r\n                    </Toolbar>\r\n            </AppBar>)\r\n}","import React from \"react\";\r\nimport './bar-graph.styles.css';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nexport default function BarGraph({data, title, dataKey, barInfo}) {\r\n    const pageWidth = window.innerWidth - 240 - 100;\r\n    return (\r\n        <Paper elevation={3}>\r\n          <h3>{title}</h3>\r\n          <BarChart\r\n            width={pageWidth}\r\n            height={300}\r\n            data={data}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 30,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey={dataKey} />\r\n            <YAxis tickFormatter={tick => tick.toLocaleString()}/>\r\n            <Tooltip formatter={(value) => new Intl.NumberFormat('en').format(value)}/>\r\n            <Legend iconType=\"circle\"/>\r\n            {barInfo.map(item =>  \r\n                <Bar dataKey={item.dataKey} name={item.name} fill={item.fill} />\r\n            )}\r\n          </BarChart>\r\n          </Paper>\r\n    )\r\n}","import React from \"react\";\r\nimport { Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LineChart } from 'recharts';\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nexport default function LineGraph ({data, title, dataKey, name, stroke}) {\r\n  const pageWidth = window.innerWidth - 240 - 100;\r\n    return (\r\n      <Paper elevation={3}>\r\n        <h3>{title}</h3>\r\n        <LineChart\r\n        width={pageWidth}\r\n        height={500}\r\n        data={data}\r\n        margin={{\r\n          top: 10,\r\n          right: 30,\r\n          left: 0,\r\n          bottom: 100,\r\n        }}\r\n      >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"country\" angle=\"290\" tickFormatter={(value) => value.toString().slice(0,10)} tickMargin=\"40\"/>\r\n      <YAxis />\r\n      <Tooltip formatter={(value) => value.toString().slice(0,10)}/>\r\n      <Legend iconType=\"circle\" verticalAlign=\"top\" />\r\n      <Line type=\"monotone\" dataKey={dataKey} name={name} fill={stroke}  />\r\n    </LineChart>\r\n    </Paper>\r\n    )\r\n} ","import React from \"react\";\r\nimport './dashboard-page.styles.css';\r\nimport BarGraph from \"../../components/bar-graph/bar-graph.component\";\r\nimport LineGraph from \"../../components/line-graph/line-graph.component\";\r\n// import AreaGraph from \"../../components/area-graph/area-graph.component\";\r\n\r\nconst todayBarGraphInfo = [\r\n  {dataKey: \"todayCases\", name: \"New Confirmed\", fill: \"#0a3a79\"},\r\n  {dataKey: \"todayRecovered\", name: \"New Recovered\", fill: \"#3498db\"},\r\n  {dataKey: \"todayDeaths\", name: \"New Deaths\", fill: \"#5295ec\"},\r\n]\r\n\r\nconst totalBarGraphInfo = [\r\n  {dataKey: \"cases\", name: \"Total Confirmed\", fill: \"#0a3a79\"},\r\n  {dataKey: \"recovered\", name: \"Total Recovered\", fill: \"#3498db\"},\r\n  {dataKey: \"deaths\", name: \"Total Deaths\", fill: \"#5295ec\"},\r\n]\r\n\r\n\r\nexport default class Dashboard extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      totalConfirmedGraphData: [],\r\n      newConfirmedGraphData: [],\r\n      summary: {}\r\n    }\r\n  }\r\n\r\n  fetchSummary = () => {\r\n    const url = 'https://disease.sh/v3/covid-19/all'\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          this.setState({\r\n            summary: data\r\n          });\r\n        });\r\n  }\r\n\r\n  fetchGraphData =()=> {\r\n    const url = 'https://disease.sh/v3/covid-19/countries';\r\n    fetch(url+'?sort=todayCases')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const newConfirmedGraphData = data.slice(0, 10);\r\n          this.setState({\r\n            newConfirmedGraphData\r\n          });\r\n        });\r\n    fetch(url+'?sort=cases')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const totalConfirmedGraphData = data.slice(0,10);\r\n        this.setState({\r\n          totalConfirmedGraphData\r\n        });\r\n      });\r\n  }\r\n    \r\n  componentDidMount() {\r\n    this.fetchSummary();\r\n    this.fetchGraphData();\r\n  }\r\n    \r\n  render(){\r\n    const {totalConfirmedGraphData, newConfirmedGraphData, summary} = this.state;\r\n    \r\n    return (\r\n      <div className=\"dashboard-page-container\">\r\n        \r\n          <div className=\"summary-container\">\r\n              <div className=\"summary-block\">\r\n                <div className=\"title\">Confirmed cases</div>\r\n                <div className=\"tite-text1\" style={{color: '#0a3a79', fontWeight: 'bold'}}><div>Total </div><div>{summary.cases?.toLocaleString()}</div></div>\r\n                <div className=\"title-text2\" style={{color: \"#3498db\", fontWeight: 'bold'}}><div>New </div><div>{summary.todayCases?.toLocaleString()}</div></div>\r\n              </div>\r\n              <div className=\"summary-block\">\r\n                <div className=\"title\">Recovered cases</div>\r\n                <div className=\"tite-text1\" style={{color: '#0a3a79', fontWeight: 'bold'}}><div>Total </div><div>{summary.recovered?.toLocaleString()}</div></div>\r\n                <div className=\"title-text2\" style={{color: \"#3498db\", fontWeight: 'bold'}}><div>New </div><div>{summary.todayRecovered?.toLocaleString()}</div></div>\r\n              </div>\r\n              <div className=\"summary-block\">\r\n                <div className=\"title\">Fatal cases</div>\r\n                <div className=\"tite-text1\" style={{color: '#0a3a79', fontWeight: 'bold'}}><div>Total </div><div>{summary.deaths?.toLocaleString()}</div></div>\r\n                <div className=\"title-text2\" style={{color: \"#3498db\", fontWeight: 'bold'}}><div>New </div><div>{summary.todayDeaths?.toLocaleString()}</div></div>\r\n              </div>\r\n          </div>\r\n          <div>\r\n            <BarGraph data={newConfirmedGraphData} title={\"Today's statistics for top 10 affected countries\"} dataKey=\"country\" barInfo={todayBarGraphInfo}/>\r\n          </div>\r\n          <div style={{marginTop: 20}}>\r\n            <BarGraph data={totalConfirmedGraphData} title={\"Total statistics for top 10 affected countries\"} dataKey=\"country\" barInfo={totalBarGraphInfo}/>\r\n          </div>\r\n          <div style={{marginTop: 20}}>\r\n            <LineGraph data={totalConfirmedGraphData} title={\"Cases per million people for top 10 affected countries\"} dataKey=\"casesPerOneMillion\" name=\"Cases per million people\" stroke=\"0a3a79\"/>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}","import { React} from \"react\";\r\nimport './sidenav.styles.css';\r\n\r\nimport { List, Drawer, ListItem, ListItemText, ListItemIcon } from \"@material-ui/core\";\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport {Link} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: 240,\r\n        flexShrink: 0,\r\n      },\r\n    drawerPaper: {\r\n        width: 240,\r\n        backgroundColor: \"white\",\r\n        color: \"black\"\r\n      }\r\n}));\r\n\r\nconst sidenavItems = [\r\n    {\"name\":\"Dashboard\", \"link\": \"/covid-dashboard\",\"icon\": <EqualizerIcon style={{ color: \"black\" }}/>},\r\n    {\"name\":\"Countrywise stats\", \"link\": \"/covid-dashboard/countrywise-stats\", \"icon\": <PublicIcon style={{ color: \"black\" }} />}\r\n]\r\n\r\n\r\nexport default function SideNav() {\r\n\r\n    const classes = useStyles();\r\n    \r\n\r\n    return (\r\n        <Drawer variant=\"permanent\" open className={classes.drawer} classes={{paper: classes.drawerPaper}} >\r\n            <List>\r\n            {sidenavItems.map(navItem => \r\n                <Link to={navItem.link}>\r\n                <ListItem button key={navItem.name}>\r\n                    <ListItemIcon>{navItem.icon}</ListItemIcon>\r\n                    <ListItemText primary={navItem.name} />\r\n                </ListItem>\r\n                </Link>)}\r\n            </List>\r\n        </Drawer>\r\n    )\r\n}","import React, { Fragment } from 'react';\r\nimport { Paper, TextField } from '@material-ui/core';\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default class CountrywiseStats extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      countries: [],\r\n      selectedCountry: \"\",\r\n      graphData: [] \r\n    }\r\n  }\r\n  \r\n  setCountries = () => {\r\n    const url = 'https://disease.sh/v3/covid-19/countries';\r\n    fetch(url).then(res => res.json()).then(data => {\r\n      const countries = data.map(item => {return {country: item?.country, flag: item?.countyInfo?.flag}})\r\n      this.setState({\r\n        countries,\r\n        selectedCountry: countries[0]?.country\r\n      }, ()=> {this.populateGraph();})\r\n    });\r\n  }\r\n\r\n  populateGraph = () => {\r\n    const url = 'https://api.covid19api.com/country/'+ this.state.selectedCountry;\r\n    fetch(url).then(res => res.json()).then(data => {\r\n      this.setState({graphData: data})\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setCountries();\r\n  }\r\n\r\n  handleChange = (e ,newVal) => {\r\n   this.setState({selectedCountry: newVal?.country}, \r\n    ()=> {\r\n      this.populateGraph()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {countries, selectedCountry, graphData} = this.state;\r\n    const pageWidth = window.innerWidth - 240 - 100;\r\n\r\n    return (\r\n      <Fragment>\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={countries}\r\n            getOptionLabel={(option) => option?.country}\r\n            style={{ width: 300, marginBottom: 100 }}\r\n            onChange={this.handleChange}\r\n            defaultValue={{country: 'Afghanistan', flag: ''}}\r\n            renderInput={(params) => <TextField {...params} label=\"Select a country\" variant=\"outlined\" />}\r\n          />\r\n          {selectedCountry && \r\n          <Paper elevation={3}>\r\n            <AreaChart\r\n              width={pageWidth}\r\n              height={500}\r\n              data={graphData}\r\n              margin={{\r\n                top: 10,\r\n                right: 30,\r\n                left: 0,\r\n                bottom: 100,\r\n              }}\r\n            >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"Date\" angle=\"290\" tickFormatter={(value) => value.toString().slice(0,10)} tickMargin=\"40\"/>\r\n            <YAxis />\r\n            <Tooltip formatter={(value) => value.toString().slice(0,10)}/>\r\n            <Legend iconType=\"circle\" verticalAlign=\"top\" />\r\n            <Area type=\"monotone\" dataKey=\"Active\" stroke=\"#8884d8\" fill=\"#0a3a79\" />\r\n          </AreaChart>\r\n          </Paper>\r\n          }\r\n       </Fragment> \r\n    );\r\n    }\r\n}\r\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Header from './components/header/header.component';\nimport DashBoard from './pages/dashboard/dashboard-page.component';\nimport SideNav from './components/sidenav/sidenav.component';\nimport CountrywiseStats from './pages/country-wise-stats/country-wise-stats-page.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <SideNav />\n        <div className=\"page-content\">\n          <Switch>\n            <Route exact path=\"/covid-dashboard/\" component={DashBoard} />\n            <Route path=\"/covid-dashboard/countrywise-stats\" component={CountrywiseStats} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}